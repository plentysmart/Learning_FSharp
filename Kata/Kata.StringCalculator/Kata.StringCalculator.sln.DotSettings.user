<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=97AD78F4E29D438CB0757751555D3637/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=97AD78F4E29D438CB0757751555D3637/Name/@EntryValue">All Tests in Kata.StringCalculator</s:String>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=97AD78F4E29D438CB0757751555D3637/XmlSerializedElements/@EntryValue">&lt;Session&gt;&lt;Elements&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add" type="NUnitTestFixtureElement" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.//[delimiter]\n at the beggining of the expression should set new delimiter" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="//[delimiter]\n at the beggining of the expression should set new delimiter" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with any number of number should return their sum" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="called with any number of number should return their sum" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with negative number should throw exception &amp;quot;negatives not allowed&amp;quot;" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="called with negative number should throw exception &amp;quot;negatives not allowed&amp;quot;" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with one number should returns this number" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="called with one number should returns this number" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with two numbers should return their sum" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="called with two numbers should return their sum" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with zero numbers (empty string) should return 0" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="called with zero numbers (empty string) should return 0" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle \n and , as delimiter" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="should handle \n and , as delimiter" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle delimiters longer than one character" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="should handle delimiters longer than one character" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle more than one delimiter" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="should handle more than one delimiter" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle more than one delimiter with length longer than one char" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="should handle more than one delimiter with length longer than one char" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should ignore numbers above 1000" ParentId="Tests+Add" type="NUnitTestElement" TypeName="Tests+Add" MethodName="should ignore numbers above 1000" Project="B93B00FA-7ADF-4346-88CF-673ABE5E17B1" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.//[delimiter]\n at the beggining of the expression should set new delimiter(&amp;quot;//;\n1;2&amp;quot;)" ParentId="Tests+Add.//[delimiter]\n at the beggining of the expression should set new delimiter" type="NUnitRowTestElement" UniqueId="[0-1016]Tests+Add.//[delimiter]\n at the beggining of the expression should set new delimiter(&amp;quot;//;\n1;2&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with any number of number should return their sum(&amp;quot;1,2,3,4,5,6,7,8,10,0,10&amp;quot;)" ParentId="Tests+Add.called with any number of number should return their sum" type="NUnitRowTestElement" UniqueId="[0-1010]Tests+Add.called with any number of number should return their sum(&amp;quot;1,2,3,4,5,6,7,8,10,0,10&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with any number of number should return their sum(&amp;quot;33,22,11&amp;quot;)" ParentId="Tests+Add.called with any number of number should return their sum" type="NUnitRowTestElement" UniqueId="[0-1011]Tests+Add.called with any number of number should return their sum(&amp;quot;33,22,11&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with negative number should throw exception &amp;quot;negatives not allowed&amp;quot;(&amp;quot;-3&amp;quot;)" ParentId="Tests+Add.called with negative number should throw exception &amp;quot;negatives not allowed&amp;quot;" type="NUnitRowTestElement" UniqueId="[0-1018]Tests+Add.called with negative number should throw exception &amp;quot;negatives not allowed&amp;quot;(&amp;quot;-3&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with one number should returns this number(&amp;quot;1&amp;quot;)" ParentId="Tests+Add.called with one number should returns this number" type="NUnitRowTestElement" UniqueId="[0-1004]Tests+Add.called with one number should returns this number(&amp;quot;1&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with one number should returns this number(&amp;quot;111&amp;quot;)" ParentId="Tests+Add.called with one number should returns this number" type="NUnitRowTestElement" UniqueId="[0-1005]Tests+Add.called with one number should returns this number(&amp;quot;111&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with two numbers should return their sum(&amp;quot;1,2&amp;quot;)" ParentId="Tests+Add.called with two numbers should return their sum" type="NUnitRowTestElement" UniqueId="[0-1007]Tests+Add.called with two numbers should return their sum(&amp;quot;1,2&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.called with two numbers should return their sum(&amp;quot;12,44&amp;quot;)" ParentId="Tests+Add.called with two numbers should return their sum" type="NUnitRowTestElement" UniqueId="[0-1008]Tests+Add.called with two numbers should return their sum(&amp;quot;12,44&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle \n and , as delimiter(&amp;quot;1\n2,3&amp;quot;)" ParentId="Tests+Add.should handle \n and , as delimiter" type="NUnitRowTestElement" UniqueId="[0-1013]Tests+Add.should handle \n and , as delimiter(&amp;quot;1\n2,3&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle \n and , as delimiter(&amp;quot;1\n2,3,22\n11&amp;quot;)" ParentId="Tests+Add.should handle \n and , as delimiter" type="NUnitRowTestElement" UniqueId="[0-1014]Tests+Add.should handle \n and , as delimiter(&amp;quot;1\n2,3,22\n11&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle delimiters longer than one character(&amp;quot;//[***]\n1***2***3&amp;quot;)" ParentId="Tests+Add.should handle delimiters longer than one character" type="NUnitRowTestElement" UniqueId="[0-1023]Tests+Add.should handle delimiters longer than one character(&amp;quot;//[***]\n1***2***3&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle delimiters longer than one character(&amp;quot;//[//]\n1//2//3&amp;quot;)" ParentId="Tests+Add.should handle delimiters longer than one character" type="NUnitRowTestElement" UniqueId="[0-1024]Tests+Add.should handle delimiters longer than one character(&amp;quot;//[//]\n1//2//3&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle more than one delimiter with length longer than one char(&amp;quot;//[***][%$]\n1%$2***3***14&amp;quot;)" ParentId="Tests+Add.should handle more than one delimiter with length longer than one char" type="NUnitRowTestElement" UniqueId="[0-1028]Tests+Add.should handle more than one delimiter with length longer than one char(&amp;quot;//[***][%$]\n1%$2***3***14&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should handle more than one delimiter(&amp;quot;//[*][%]\n1*2%3&amp;quot;)" ParentId="Tests+Add.should handle more than one delimiter" type="NUnitRowTestElement" UniqueId="[0-1026]Tests+Add.should handle more than one delimiter(&amp;quot;//[*][%]\n1*2%3&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should ignore numbers above 1000(&amp;quot;1,2,3,1002,1200,123131,1&amp;quot;)" ParentId="Tests+Add.should ignore numbers above 1000" type="NUnitRowTestElement" UniqueId="[0-1020]Tests+Add.should ignore numbers above 1000(&amp;quot;1,2,3,1002,1200,123131,1&amp;quot;)" /&gt;&lt;UnitTestElement Provider="nUnit" Id="Tests+Add.should ignore numbers above 1000(&amp;quot;1000,1001,22&amp;quot;)" ParentId="Tests+Add.should ignore numbers above 1000" type="NUnitRowTestElement" UniqueId="[0-1021]Tests+Add.should ignore numbers above 1000(&amp;quot;1000,1001,22&amp;quot;)" /&gt;&lt;/Elements&gt;&lt;/Session&gt;</s:String></wpf:ResourceDictionary>